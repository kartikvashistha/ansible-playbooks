return {}
-- return {
-- 	{
-- 		"williamboman/mason.nvim",
-- 		lazy = false,
-- 		config = function()
-- 			require("mason").setup()
-- 		end,
-- 	},
-- 	{
-- 		"williamboman/mason-lspconfig.nvim",
-- 		lazy = false,
-- 		opts = {
-- 			ensure_installed = {
-- 				"lua_ls",
-- 				"terraformls",
-- 				"gopls",
-- 				"rust_analyzer",
-- 			},
-- 		},
-- 	},
-- }
-- {
-- 	"neovim/nvim-lspconfig",
-- 	lazy = false,
-- 	config = function()
-- 		local lspconfig = require("lspconfig")
-- 		lspconfig.lua_ls.setup({})
-- 		lspconfig.gopls.setup({})
-- 		lspconfig.terraformls.setup({})
--
-- 		vim.api.nvim_create_autocmd("LspAttach", {
-- 			group = vim.api.nvim_create_augroup("UserLspConfig", {}),
-- 			callback = function(ev)
-- 				-- Enable completion triggered by <c-x><c-o>
-- 				vim.bo[ev.buf].omnifunc = "v:lua.vim.lsp.omnifunc"
-- 				-- Buffer local mappings.
-- 				-- See `:help vim.lsp.*` for documentation on any of the below functions
-- 				local opts = { buffer = ev.buf }
-- 				vim.keymap.set("n", "gD", vim.lsp.buf.declaration, opts)
-- 				vim.keymap.set("n", "gd", vim.lsp.buf.definition, opts)
-- 				vim.keymap.set("n", "K", vim.lsp.buf.hover, opts)
-- 				vim.keymap.set("n", "gi", vim.lsp.buf.implementation, opts)
-- 				vim.keymap.set("n", "<C-k>", vim.lsp.buf.signature_help, opts)
-- 				vim.keymap.set("n", "<space>wa", vim.lsp.buf.add_workspace_folder, opts)
-- 				vim.keymap.set("n", "<space>wr", vim.lsp.buf.remove_workspace_folder, opts)
-- 				-- vim.keymap.set("n", "<space>wl", function()
-- 				-- 	print(vim.inspect(vim.lsp.buf.list_workspace_folders()))
-- 				-- end, opts)
-- 				vim.keymap.set("n", "<space>D", vim.lsp.buf.type_definition, opts)
-- 				vim.keymap.set("n", "<space>rn", vim.lsp.buf.rename, opts)
-- 				vim.keymap.set("n", "<leader>ca", vim.lsp.buf.code_action, opts)
-- 				vim.keymap.set("n", "gr", vim.lsp.buf.references, opts)
-- 				vim.keymap.set("n", "<space>f", function()
-- 					vim.lsp.buf.format({ async = true })
-- 				end, opts)
-- 			end,
-- 		})
-- 		local capabilities = require("cmp_nvim_lsp").default_capabilities()
--
-- 		-- local lspconfig = require("lspconfig")
-- 		-- lspconfig.tsserver.setup({
-- 		--   capabilites = capabilities,
-- 		-- })
-- 		-- lspconfig.html.setup({
-- 		--   capabilites = capabilities,
-- 		-- })
-- 		lspconfig.lua_ls.setup({
-- 			capabilites = capabilities,
-- 			settings = {
-- 				Lua = {
-- 					runtime = { version = "LuaJIT" },
-- 					workspace = {
-- 						checkThirdParty = false,
-- 						-- Tells lua_ls where to find all the Lua files that you have loaded
-- 						-- for your neovim configuration.
-- 						library = {
-- 							"${3rd}/luv/library",
-- 							unpack(vim.api.nvim_get_runtime_file("", true)),
-- 						},
-- 						-- If lua_ls is really slow on your computer, you can try this instead:
-- 						-- library = { vim.env.VIMRUNTIME },
-- 					},
-- 					completion = {
-- 						callSnippet = "Replace",
-- 					},
-- 					-- You can toggle below to ignore Lua_LS's noisy `missing-fields` warnings
-- 					-- diagnostics = { disable = { 'missing-fields' } },
-- 				},
-- 			},
-- 		})
--
-- 		-- vim.keymap.set("n", "K", vim.lsp.buf.hover, {})
-- 		-- vim.keymap.set("n", "<leader>gd", vim.lsp.buf.definition, {})
-- 		-- vim.keymap.set("n", "<leader>gr", vim.lsp.buf.references, {})
-- 		-- vim.keymap.set("n", "<leader>ca", vim.lsp.buf.code_action, {})
-- 	end,
-- },
-- }
